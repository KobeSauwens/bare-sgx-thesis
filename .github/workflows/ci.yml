name: CI for C Programs
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '00 08 * * MON'

jobs:
  build:
    name: Build and Test Compilation
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc make libssl-dev
      - name: Install Intel SGX SDK and PSW
        run: |
          wget https://download.01.org/intel-sgx/sgx-linux/2.17.1/distro/ubuntu20.04-server/sgx_linux_x64_sdk_2.17.101.1.bin
          chmod +x sgx_linux_x64_sdk_2.17.101.1.bin
          sudo ./sgx_linux_x64_sdk_2.17.101.1.bin --prefix=/opt/intel
          sudo apt-get install -y libsgx-epid libsgx-quote-ex libsgx-dcap-ql
          source /opt/intel/sgxsdk/environment
      - name: Check aesmd service
        run: |
          sudo service aesmd status || echo "aesmd not running (expected in CI)"
      - name: Verify SGX tools
        run: |
          which sgx_edger8r || { echo "sgx_edger8r not found"; exit 1; }
          which sgx_sign || { echo "sgx_sign not found"; exit 1; }
          sgx_sign --version
      - name: Build urts and sgx-step
        run: |
          make -C urts
          make -C sgx-step
      - name: Build C programs
        run: |
          for dir in app/ecall_asm app/crypto-app app/speed-test-sdk app/bare-step app/ecall_ptr app/bare-crypto-app; do
            echo "Building in $dir"
            cd $dir
            make CFLAGS="-fno-stack-protect"
            if [ -f "app" ]; then
              echo "Binary 'app' created in $dir"
            else
              echo "Error: Binary 'app' not found in $dir"
              exit 1
            fi
            cd -
          done
